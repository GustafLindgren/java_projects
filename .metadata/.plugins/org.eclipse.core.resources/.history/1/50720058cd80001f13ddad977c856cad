/**
 * The server class.
 */

package chat_client;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {
		/**
		 * serverSocket listens for incoming connections from clients
		 */
		private ServerSocket serverSocket;
		
		public Server(ServerSocket serverSocket) {
			this.serverSocket = serverSocket;
		}
		
		/**
		 * Starts the server.
		 * accept() blocks until connection is accepted
		 * When the server receives a connection request, accept() is called and a socket object is returned.
		 * The client communicates with the server through this socket.
		 * @throws IOException if an error occurs when the client establishes a connection to the server.
		 */
		public void startServer() {
			
			try {
				
				while (!serverSocket.isClosed()) {
					
					Socket socket = serverSocket.accept();
					System.out.println("A new client has connected!");
					
					/*
					 * Responsible for communicating with each client
					 */
					ClientHandler clientHandler = new ClientHandler(socket);
					
					Thread thread = new Thread(clientHandler);
					thread.start();
					
				}
			}
			
			catch (IOException e) {
				
				closeServerSocket();
			}
		}
		
		public void closeServerSocket() {
			
			try {
					if (serverSocket != null) {
						serverSocket.close();
					}
			}
			catch (IOException e) {
				e.printStackTrace();
			}
		}
		
		public static void main(String[] args) throws IOException{
			
			// listens on port 1234
			ServerSocket serverSocket = new ServerSocket(1234);
			Server server = new Server(serverSocket);
			server.startServer();
			
		}

}
